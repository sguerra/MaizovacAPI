#%RAML 1.0
title: "Maizovac API"
version: v1
protocols: [ HTTP, HTTPS ]
baseUri: http://localhost:3000
mediaType: application/json

types:
    api:version: !include ../schema/json/version.json
    api:error: !include ../schema/json/error.json
    api:success: !include ../schema/json/success.json
    api:collection: !include ../schema/json/collection.json
    api:service: !include ../schema/json/service.json
    api:operation: !include ../schema/json/operation.json
    api:operationResult: !include ../schema/json/operationResult.json
    api:user: !include ../schema/json/user.json
    api:role: !include ../schema/json/role.json
    api:record: !include ../schema/json/record.json
    api:balance: !include ../schema/json/balance.json
    
traits:
    collection:
        responses:
            200:
                body:
                    type: api:collection
            404:
                body:
                    type: api:error
            500:
                body:
                    type: api:error


/{version}:
    description: API version
    uriParameters:
        version:
            enum: ["v1"]
            type: "string"
    get:
        description: Get current API version information
        responses:
            200:
                body:
                    type: api:version
            404:
                body:
                    type: api:error
    /services:
        get:
            description: Get API services
            is: [ collection ]
        /{service}:
            uriParameters:
                service:
                    enum: ["addition", "subtraction", "multiplication", "division", "square_root", "random_string"]
                    type: "string"
            get:
                description: Get an API service detail
                responses:
                    200:
                        body:
                            type: api:service
                    404:
                        body:
                            type: api:error
            patch:
                description: Update a service
                body:
                    type: api:service
                responses:
                    200:
                        body:
                            type: api:service
                    400:
                        body:
                            type: api:error
            /calculate:
                post:
                    description: Call calculate method of a service
                    body:
                        type: api:operation
                    responses:
                        200:
                            body:
                                type: api:operationResult
                        400:
                            body:
                                type: api:error
                        404:
                            body:
                                type: api:error
                        500:
                            body:
                                type: api:error
    /users:
        get:
            description: Get a collection of users
            is: [ collection ]
        post:
            description: Create a new user
            body:
                type: api:user
            responses:
                201:
                    body:
                        type: api:user
                404:
                    body:
                        type: api:error
        /{username}:
            uriParameters:
                username:
                    type: "string"
            get:
                description: Get a user detail
                responses:
                    200:
                        body:
                            type: api:user
                    404:
                        body:
                            type: api:error
            patch:
                description: Update a user
                body:
                    type: api:user
                responses:
                    200:
                        body:
                            type: api:user
                    404:
                        body:
                            type: api:error
            delete:
                description: Soft-delete a user
                responses:
                    201:
                        body:
                            type: api:success
                    404:
                        body:
                            type: api:error
    /roles:
        get:
            description: Get all roles
            is: [ collection ]
    /records:
        get:
            description: Get a collection of records
            is: [ collection ]
        /{record}:
            uriParameters:
                record:
                    type: "string"
            delete:
                description: Soft-delete a record
                responses:
                    201:
                        body:
                            type: api:success
                    404:
                        body:
                            type: api:error
    /balances:
        get:
            description: Get a collection of user balances
            responses:
            is: [ collection ]
    /profile:
        get:
            description: Get current user information and balance
            responses:
                200:
                    body:
                        type: api:balance
                404:
                    body:
                        type: api:error
        /records:
            get:
                description: Get a collection of records for current user
                is: [ collection ]